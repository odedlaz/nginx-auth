worker_processes 1;
events {
  worker_connections  1024;
}

# needed so nginx will load the following env variables
env JWT_SECRET;
env REDIS_HOST;
env REDIS_PORT;
env CLIENT_CACHE_REFRESH_INTERVAL;

http {
  lua_package_path "/opt/openresty/nginx/scripts/?.lua;;";

  server {
      listen 8080;
      location ~* ^/secure$ {
          return 200 'Hello! you have been authorized!\n';
          add_header Content-Type text/plain;
      }
  }

  server {
      listen 80 default_server;
      # extract the subdomain
      # tokens are issued to specific subdomains
      server_name ~^(?<subdomain>[^.]+).*$;
      error_page 555 = @auth_jwt;
      resolver 127.0.0.11 ipv6=off;

      # JWT authentication uses the Bearer prefix
      if ($http_authorization ~* "^Bearer") {
        return 555;
      }

      location @auth_jwt {
        access_by_lua_block {
          local route = require("route")
          -- the subdomain is used as the service identifier
          route.authorize(ngx.var.subdomain)
        }
        proxy_pass http://127.0.0.1:8080;
      }

      # default basic auth
      location ~* / {
        auth_basic "Restricted";
        auth_basic_user_file /opt/openresty/nginx/conf/.htpasswd;
        proxy_pass http://127.0.0.1:8080;
      }

  }
}
